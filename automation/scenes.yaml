- alias: Handle scene override
  trigger:
    - platform: state
      entity_id: input_select.presence
    - platform: state
      entity_id: input_select.primary_scene
    - platform: state
      entity_id: input_select.secondary_scene
  condition:
    condition: template
    value_template: "{{ trigger.to_state.state != 'None' }}"
  action:
    - service: scene.turn_on
      data_template:
        entity_id: "scene.{{ trigger.to_state.state | lower | replace(' ', '_') }}"

- alias: Set home mode to Home
  trigger:
    - platform: state
      entity_id: group.everyone
      to: home
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.home

- alias: Set home mode to Away
  trigger:
    - platform: state
      entity_id: group.everyone
      to: not_home
      for:
        minutes: 15
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.away

- alias: Set home mode to Vacation
  trigger:
    - platform: state
      entity_id: group.everyone
      to: not_home
      for:
        hours: 24
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.vacation

- alias: Synchronise scene to time of day
  trigger:
    - platform: state
      entity_id: sensor.time_of_day
    - platform: state
      entity_id: group.everyone
      to: home
    - platform: state
      entity_id: input_select.secondary_scene
      to: None
    - platform: state
      entity_id: climate.living_room
      to: Smart Schedule
  condition:
    - condition: state
      entity_id: group.everyone
      state: home
  action:
    - service: scene.turn_on
      data_template:
        entity_id: scene.{{ states('sensor.time_of_day') | lower | replace(' ', '_') }}

- alias: Trigger morning scene at fixed time
  trigger:
    - platform: time
      at: 06:30:00
  condition:
    - condition: state
      entity_id: sensor.time_of_day
      state: Night
    - condition: time
      weekday:
        - mon
        - tue
        - wed
        - thu
        - fri
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.morning

- alias: Trigger night scene at fixed time
  trigger:
    - platform: time
      at: "21:30:00"
    - platform: time
      at: "23:30:00"
  condition:
    - condition: or
      conditions:
        - condition: time
          after: "21:30:00"
          weekday:
            - mon
            - tue
            - wed
            - thu
            - sun
        - condition: time
          after: "23:30:00"
          weekday:
            - fri
            - sat
  action:
    - service: scene.turn_on
      data:
        entity_id: scene.night

- alias: Reactivate secondary scene upon primary scene switch
  trigger:
    - platform: state
      entity_id: input_select.primary_scene
  condition:
    - condition: template
      value_template: "{{ not is_state('input_select.secondary_scene', 'None') }}"
  action:
    - service: scene.turn_on
      data_template:
        entity_id: "scene.{{ states('input_select.secondary_scene') | lower | replace(' ', '_') }}"
