title: " "
views:
  - cards:
      - type: vertical-stack
        cards:
          - entities:
              - input_boolean.guest_mode
              - input_boolean.movie_mode
              - input_boolean.vacation_mode
              - type: section
                label: Kitchen illuminance
              - icon: mdi:brightness-6
                entity: sensor.kitchen_illuminance
                name: Current kitchen illuminance
                secondary: Currently, lights will {{ 'not' if is_state('binary_sensor.kitchen_sufficiently_lit', 'on') else '' }} turn on
                type: custom:template-entity-row
              - input_number.kitchen_illuminance_threshold
            show_header_toggle: false
            style:
              .: |
                ha-card {
                  background: transparent;
                  box-shadow: none;
                  transition: 0;
                }

                h1 {
                  padding: 24px 16px;
                }

                h1 .name {
                  font-size: 28px;
                  text-align: center;
                  width: 100%;
                }
              hui-section-row:
                $: |
                  .label {
                    color: var(--primary--text-color) !important;
                    font-family: 'Product Sans', Roboto;
                    font-weight: 600;
                  }
            title: General
            type: entities
    path: index
    title: General
  - cards:
      - type: vertical-stack
        cards:
          - entities:
              - entity: automation.update_lights_to_new_circadian_values
                icon: mdi:lightning-bolt-outline
                name: Update turned on lights automatically
                secondary_info: last-triggered
              - entity: sensor.time_of_day
                secondary: Brightness at {{ ((state_attr('sensor.time_of_day', 'brightness')|int / 255) * 100)|round(0) }}%, temperature at {{ state_attr('sensor.time_of_day', 'color_temp') }} mireds
                type: custom:template-entity-row
              - type: section
                label: Thresholds
              - entity: sensor.elevation
                name: Current elevation
                secondary: "Max today is {{ states('sensor.max_elevation')|round(1) }} °"
                state: "{{ states('sensor.elevation') }} °"
                type: custom:template-entity-row
              - input_number.setting_day_threshold
              - input_number.setting_afternoon_threshold
              - input_number.setting_early_evening_threshold
              - input_number.setting_evening_threshold
              - input_number.setting_night_threshold
              - type: section
                label: Light settings
              - input_number.setting_coolest_colour_temp
              - input_number.setting_warmest_colour_temp
              - input_number.setting_max_brightness
              - input_number.setting_min_brightness
              - input_number.setting_bedtime_brightness
            show_header_toggle: false
            style:
              .: |
                ha-card {
                  background: transparent;
                  box-shadow: none;
                  transition: 0;
                }

                h1 {
                  padding: 24px 16px;
                }

                h1 .name {
                  font-size: 28px;
                  text-align: center;
                  width: 100%;
                }
              hui-section-row:
                $: |
                  .label {
                    color: var(--primary--text-color) !important;
                    font-family: 'Product Sans', Roboto;
                    font-weight: 600;
                  }
            title: Adaptive lighting
            type: entities
    path: adaptive-lighting
    title: Adaptive lighting
  - cards:
      - type: vertical-stack
        cards:
          - entities:
              - input_boolean.cooking_mode
              - type: section
                label: Schedule
              - input_datetime.cooking_start
              - input_datetime.cooking_end
              - type: section
                label: Notifications
              - input_boolean.setting_cooking_mode_notifications
            show_header_toggle: false
            style:
              .: |
                ha-card {
                  background: transparent;
                  box-shadow: none;
                  transition: 0;
                }

                h1 {
                  padding: 24px 16px;
                }

                h1 .name {
                  font-size: 28px;
                  text-align: center;
                  width: 100%;
                }
              hui-section-row:
                $: |
                  .label {
                    color: var(--primary--text-color) !important;
                    font-family: 'Product Sans', Roboto;
                    font-weight: 600;
                  }
            title: Cooking mode
            type: entities
    path: cooking-mode
    title: Cooking
  - cards:
      - type: vertical-stack
        cards:
          - entities:
              - type: section
                label: Settings
              - type: custom:fold-entity-row
                clickable: true
                head:
                  icon: mdi:bed-outline
                  name: Bedtime
                  state: " "
                  type: custom:template-entity-row
                entities:
                  - entity: input_datetime.workday_bedtime
                    name: Workday
                  - entity: input_datetime.off_day_bedtime
                    name: Off day
              - type: custom:fold-entity-row
                clickable: true
                head:
                  icon: mdi:alarm
                  name: Wake up
                  state: " "
                  type: custom:template-entity-row
                entities:
                  - entity: input_datetime.workday_alarm
                    name: Workday
                  - entity: input_datetime.off_day_alarm
                    name: Off day
              - type: section
                label: Automatically turn on or off
              - type: custom:select-list-card
                entity: input_select.setting_bedtime_mode_schedule
                style: |
                  ha-card {
                    background: transparent;
                    box-shadow: none;
                    transition: 0;
                  }

                  paper-item {
                    font-size: var(--paper-font-body1_-_font-size);
                  }
              - type: section
                label: Notifications
              - entity: input_boolean.setting_bedtime_notifications
                name: Get notifications about bedtime mode
            show_header_toggle: false
            style:
              .: |
                ha-card {
                  background: transparent;
                  box-shadow: none;
                  transition: 0;
                }

                h1 {
                  padding: 24px 16px;
                }

                h1 .name {
                  font-size: 28px;
                  text-align: center;
                  width: 100%;
                }
              hui-section-row:
                $: |
                  .label {
                    color: var(--primary--text-color) !important;
                    font-family: 'Product Sans', Roboto;
                    font-weight: 600;
                  }
            title: Bedtime
            type: entities
    path: bedtime-mode
    title: Bedtime
  - cards:
      - type: vertical-stack
        cards:
          - entities:
              - input_boolean.work_mode
              - conditions:
                  - entity: input_boolean.work_mode
                    state: "on"
                  - entity: timer.work_mode_break
                    state: idle
                row:
                  action_name: Start
                  entity: timer.work_mode_break
                  name: Take a break?
                  tap_action:
                    action: call-service
                    service: timer.start
                    service_data:
                      entity_id: timer.work_mode_break
                  type: button
                type: conditional
              - type: section
                label: Schedule
              - input_datetime.work_start
              - input_datetime.work_end
              - type: section
                label: Notifications
              - entity: input_boolean.setting_work_mode_notifications
                name: Get notifications about work mode
            show_header_toggle: false
            style:
              .: |
                ha-card {
                  background: transparent;
                  box-shadow: none;
                  transition: 0;
                }

                h1 {
                  padding: 24px 16px;
                }

                h1 .name {
                  font-size: 28px;
                  text-align: center;
                  width: 100%;
                }
              hui-section-row:
                $: |
                  .label {
                    color: var(--primary--text-color) !important;
                    font-family: 'Product Sans', Roboto;
                    font-weight: 600;
                  }
            title: Work mode
            type: entities
    path: work-mode
    title: Work
