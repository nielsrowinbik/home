automation:
  - alias: Announce incoming bedtime through persistent notification
    trigger:
      # Trigger when we should (no longer) notify about the set bedtime being within the next 60 minutes:
      - platform: state
        entity_id: binary_sensor.should_announce_bedtime
        to:
          - "on"
      # Trigger when the bedtime changes (maybe we need to update the notification with the correct value):
      - platform: state
        entity_id: input_datetime.todays_bedtime
    condition:
      # Only continue if notification settings for bedtime are turned on:
      - condition: state
        entity_id: input_boolean.setting_bedtime_notifications
        state: "on"
    action:
      - service: notify.all_devices
        data:
          title: Your bedtime starts at {{ states('input_datetime.todays_bedtime')[:-3] }}
          message: Get ready for bed soon
          data:
            channel: Insights
            clickAction: /ui-settings/bedtime
            persistent: true
            sticky: true
            tag: bedtime_mode

  - alias: Show a persistent notification while bedtime mode is on
    trigger:
      - platform: state
        entity_id: input_boolean.bedtime_mode
        to:
          - "on"
    condition:
      # Only continue if notification settings for bedtime are turned on:
      - condition: state
        entity_id: input_boolean.setting_bedtime_notifications
        state: "on"
    action:
      - service: notify.all_devices
        data:
          title: Bedtime mode is on
          message: The lights will stay off until {{ states('input_datetime.todays_alarm')[:-3] }}
          data:
            actions:
              - action: BEDTIME_TURN_OFF
                title: Turn off
            channel: Insights
            clickAction: /ui-settings/bedtime
            persistent: true
            sticky: true
            tag: bedtime_mode

  - alias: Turn off bedtime mode through notification action
    trigger:
      - platform: event
        event_type: mobile_app_notification_action
        event_data:
          action: BEDTIME_TURN_OFF
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.bedtime_mode

  - alias: Turn off bedtime mode when charging stops
    trigger:
    condition:
      - condition: state
        entity_id: binary_sensor.is_past_wake_up
        state: "on"
    condition:
      - condition: state
        entity_id: input_boolean.setting_bedtime_while_charging
        state: "on"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.bedtime_mode
  
  - alias: Turn off bedtime mode at scheduled time
    trigger:
      - platform: time
        at: input_datetime.todays_alarm
    condition:
      - condition: state
        entity_id: input_boolean.setting_bedtime_while_charging
        state: "off"
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.bedtime_mode

  - alias: Turn on bedtime mode when charging begins
    trigger:
      - platform: state
        entity_id: binary_sensor.pixel_4_is_charging
        to: "on"
    condition:
      - condition: state
        entity_id: input_boolean.setting_bedtime_while_charging
        state: "on"
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.should_announce_bedtime
            state: "on"
          - condition: state
            entity_id: binary_sensor.is_past_bedtime
            state: "on"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.bedtime_mode
  
  - alias: Turn on bedtime mode at scheduled time
    trigger:
      - platform: time
        at: input_datetime.todays_bedtime
    condition:
      - condition: state
        entity_id: input_boolean.setting_bedtime_while_charging
        state: "off"
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.bedtime_mode

  - alias: Dismiss bedtime related notifications
    trigger:
      # Trigger when bedtime mode is turned off:
      - platform: state
        entity_id: input_boolean.bedtime_mode
        to:
          - "off"
      # Trigger when we no longer want bedtime mode notifications:
      - platform: state
        entity_id: input_boolean.setting_bedtime_notifications
        to:
          - "off"
    action:
      - service: notify.all_devices
        data:
          message: clear_notification
          data:
            tag: bedtime_mode

  - alias: Set today's alarm
    trigger:
      - platform: state
        entity_id: binary_sensor.today_is_a_workday
        to:
          - "on"
          - "off"
      - platform: state
        entity_id: input_datetime.workday_alarm
      - platform: state
        entity_id: input_datetime.off_day_alarm
    action:
      - service: input_datetime.set_datetime
        data:
          entity_id: input_datetime.todays_alarm
          time: >-
            {% set entity = 'workday_alarm' if is_state('binary_sensor.today_is_a_workday', 'on') else 'off_day_alarm' %}

            {{ states('input_datetime.' ~ entity) }}

  - alias: Set tomorrow's alarm
    trigger:
      - platform: state
        entity_id: binary_sensor.tomorrow_is_a_workday
        to:
          - "on"
          - "off"
      - platform: state
        entity_id: input_datetime.workday_alarm
      - platform: state
        entity_id: input_datetime.off_day_alarm
    action:
      - service: input_datetime.set_datetime
        data:
          entity_id: input_datetime.tomorrows_alarm
          time: >-
            {% set entity = 'workday_alarm' if is_state('binary_sensor.tomorrow_is_a_workday', 'on') else 'off_day_alarm' %}

            {{ states('input_datetime.' ~ entity) }}

  - alias: Set today's bedtime
    trigger:
      - platform: state
        entity_id: binary_sensor.tomorrow_is_a_workday
        to:
          - "on"
          - "off"
      - platform: state
        entity_id: input_datetime.workday_bedtime
      - platform: state
        entity_id: input_datetime.off_day_bedtime
    action:
      - service: input_datetime.set_datetime
        data:
          entity_id: input_datetime.todays_bedtime
          time: >-
            {% set entity = 'workday_bedtime' if is_state('binary_sensor.tomorrow_is_a_workday', 'on') else 'off_day_bedtime' %}

            {{ states('input_datetime.' ~ entity) }}

binary_sensor:
  - platform: template
    sensors:
      is_past_bedtime:
        friendly_name: It's past today's scheduled bedtime
        value_template: >-
          {% set bedtime = state_attr('input_datetime.todays_bedtime', 'timestamp')|int %}
          {% set now = (now().hour * 60 + now().minute) * 60 + now().second %}

          {{ bedtime <= now }}
      is_past_wake_up:
        friendly_name: It's past today's scheduled wake up time
        value_template: >-
          {% set wake_up = state_attr('input_datetime.todays_alarm', 'timestamp')|int %}
          {% set now = (now().hour * 60 + now().minute) * 60 + now().second %}

          {{ wake_up <= now }}
      should_announce_bedtime:
        friendly_name: Bedtime should be announced
        value_template: >-
          {% set bedtime = state_attr('input_datetime.todays_bedtime', 'timestamp')|int %}
          {% set now = (now().hour * 60 + now().minute) * 60 + now().second %}
          {% set announce_window = 60 %}

          {{ (bedtime - (announce_window * 60)) <= now < bedtime }}
      today_is_a_workday:
        friendly_name: Today is a workday
        value_template: "{{ is_state('binary_sensor.today_is_a_national_workday', 'on') if is_state('input_boolean.vacation_mode', 'off') else false }}"
      tomorrow_is_a_workday:
        friendly_name: Tomorrow is a workday
        value_template: "{{ is_state('binary_sensor.tomorrow_is_a_national_workday', 'on') if is_state('input_boolean.vacation_mode', 'off') else false }}"
  - platform: workday
    country: NL
    name: Today is a national workday
  - platform: workday
    country: NL
    days_offset: 1
    name: Tomorrow is a national workday

input_boolean:
  bedtime_mode:
    icon: mdi:bed-outline
    name: Bedtime mode
  setting_bedtime_notifications:
    icon: mdi:bell-ring-outline
    name: Bedtime mode notifications
  setting_bedtime_while_charging:
    icon: mdi:power-plug-outline
    name: Turn on bedtime mode while charging at bedtime
  # TODO: Remove this in favour of "bedtime mode".
  night_mode:
    icon: mdi:weather-night
    name: Night mode
  vacation_mode:
    icon: mdi:palm-tree
    name: Vacation mode

input_datetime:
  todays_bedtime:
    has_date: false
    has_time: true
    icon: mdi:bed-outline
    name: Today's bedtime
  todays_alarm:
    has_date: false
    has_time: true
    icon: mdi:alarm
    name: Today's alarm
  tomorrows_alarm:
    has_date: false
    has_time: true
    icon: mdi:alarm
    name: Tomorrow's alarm
  off_day_bedtime:
    has_date: false
    has_time: true
    icon: mdi:bed-outline
    name: Day off bedtime
  off_day_alarm:
    has_date: false
    has_time: true
    icon: mdi:alarm
    name: Day off alarm
  workday_bedtime:
    has_date: false
    has_time: true
    icon: mdi:bed-outline
    name: Workday bedtime
  workday_alarm:
    has_date: false
    has_time: true
    icon: mdi:alarm
    name: Workday alarm
