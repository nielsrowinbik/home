sensor:
  - platform: buienradar
    monitored_conditions:
      - temperature
      - precipitation
      - irradiance
  - platform: darksky
    api_key: !secret dark_sky_api_key
    monitored_conditions:
      - cloud_cover
  - platform: template
    sensors:
      sun_elevation:
        friendly_name: Sun elevation
        icon_template: mdi:white-balance-sunny
        unit_of_measurement: "°"
        value_template: "{{ state_attr('sun.sun', 'elevation')|float|round(1) }}"
      sun_elevation_corrected:
        icon_template: mdi:white-balance-sunny
        friendly_name: Sun elevation (corrected for cloud coverage)
        value_template: "{{ (state_attr('sun.sun', 'elevation')|float - ((states('sensor.dark_sky_cloud_coverage')|float / 100) * state_attr('sun.sun', 'elevation')|float)|abs)|round(2) }}"
        unit_of_measurement: "°"
      sun_direction:
        friendly_name: Sun direction
        icon_template: >-
          {% if as_timestamp(state_attr('sun.sun', 'next_noon')) - as_timestamp(state_attr('sun.sun', 'next_midnight')) < 0 %}
            mdi:weather-sunset-up
          {% else %}
            mdi:weather-sunset-down
          {% endif %}
        value_template: >-
          {% if as_timestamp(state_attr('sun.sun', 'next_noon')) - as_timestamp(state_attr('sun.sun', 'next_midnight')) < 0 %}
            Rising
          {% else %}
            Setting
          {% endif %}
      time_of_day:
        friendly_name: Time of day
        icon_template: mdi:calendar-clock
        value_template: >-
          {% if is_state('sensor.sun_direction', 'Rising') and states('sensor.sun_elevation_corrected')|float > states('input_number.day_threshold')|float %}
            Day
          {% elif is_state('sensor.sun_direction', 'Rising') and states('sensor.sun_elevation_corrected')|float > states('input_number.morning_threshold')|float %}
            Morning
          {% elif is_state('sensor.sun_direction', 'Rising') %}
            Night
          {% elif is_state('sensor.sun_direction', 'Setting') and states('sensor.sun_elevation_corrected')|float < states('input_number.evening_threshold')|float %}
            Evening
          {% elif is_state('sensor.sun_direction', 'Setting') and states('sensor.sun_elevation_corrected')|float < states('input_number.early_evening_threshold')|float %}
            Early evening
          {% elif is_state('sensor.sun_direction', 'Setting') and states('sensor.sun_elevation_corrected')|float < states('input_number.afternoon_threshold')|float %}
            Afternoon
          {% else %}
            Day
          {% endif %}
