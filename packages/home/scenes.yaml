automation:
  - alias: Set home mode to Home
    trigger:
      - platform: state
        entity_id: group.everyone
        to: home
    action:
      - service: scene.turn_on
        data:
          entity_id: scene.home

  - alias: Set home mode to Away
    trigger:
      - platform: state
        entity_id: group.everyone
        to: not_home
        for:
          minutes: 15
    action:
      - service: scene.turn_on
        data:
          entity_id: scene.away

  - alias: Set home mode to Vacation
    trigger:
      - platform: state
        entity_id: group.everyone
        to: not_home
        for:
          hours: 24
    action:
      - service: scene.turn_on
        data:
          entity_id: scene.vacation

  - alias: Turn off Night scene
    trigger:
      - platform: template
        value_template: "{{ states('sensor.time') == state_attr('input_datetime.workday_alarm', 'timestamp') | int | timestamp_custom('%H:%M', False) }}"
      - platform: template
        value_template: "{{ states('sensor.time') == state_attr('input_datetime.off_day_alarm', 'timestamp') | int | timestamp_custom('%H:%M', False) }}"
      - platform: state
        entity_id: sensor.time_of_day
        to: "Day"
    condition:
      condition: or
      conditions:
        - condition: template
          value_template: "{{ is_state('binary_sensor.workday_sensor', 'on') and states('sensor.time') >= state_attr('input_datetime.workday_alarm', 'timestamp') | int | timestamp_custom('%H:%M', False) }}"
        - condition: template
          value_template: "{{ is_state('binary_sensor.workday_sensor', 'off') and states('sensor.time') >= state_attr('input_datetime.off_day_alarm', 'timestamp') | int | timestamp_custom('%H:%M', False) }}"
        - condition: template
          value_template: "{{ is_state('sensor.time_of_day', 'Day') }}"
    action:
      - service: script.turn_off_night_scene
      
  - alias: Notify when current scene and time of day are out of sync
    trigger:
      - platform: state
        entity_id: binary_sensor.current_scene_and_time_of_day_mismatch
        to: 'on'
    condition:
      - condition: state
        entity_id: group.everyone
        state: home
    action:
      - service: notify.mobile_app_pixel_4
        data:
          title: Current scene doesn't match time of day
          message: The currently active scene doesn't match the time of day
          data:
            actions:
              - action: scene_sync
                title: Fix now
  
  - alias: Sync scene when arriving home
    trigger:
      - platform: state
        entity_id: group.everyone
        to: home
    condition:
      condition: not
      conditions:
        - condition: state
          entity_id: sensor.time_of_day
          state: Night
    action:
      - service: script.scene_sync

  - alias: Turn on correct scene when arriving home at Night
    trigger:
      - platform: state
        entity_id: group.everyone
        to: home
    condition:
      - condition: state
        entity_id: sensor.time_of_day
        state: Night
    action:
      - service: scene.turn_on
        data_template:
          entity_id: "scene.{{ 'evening' if now().hour > 12 else 'morning' }}"

  - alias: Handle scene override
    trigger:
      - platform: state
        entity_id: input_select.presence
      - platform: state
        entity_id: input_select.scene
    action:
      - service: scene.turn_on
        data_template:
          entity_id: "scene.{{ trigger.to_state.state | lower | replace(' ', '_') }}"

binary_sensor:
  - platform: template
    sensors:
      current_scene_and_time_of_day_mismatch:
        friendly_name: Current scene and Time of Day mismatch
        delay_on:
          seconds: 5
        value_template: "{{ states('sensor.time_of_day') != states('sensor.current_scene') }}"
  - platform: workday
    country: NL
    name: Today is a workday
  - platform: workday
    country: NL
    name: Tomorrow is a workday
    days_offset: 1

group:
  all_scenes:
    entities:
      - scene.morning
      - scene.day
      - scene.afternoon
      - scene.early_evening
      - scene.evening
      - scene.night
    icon: mdi:theme-light-dark
    name: Scenes

input_datetime:
  workday_alarm:
    has_date: false
    has_time: true
    initial: "06:30"
    name: Workday alarm
  off_day_alarm:
    has_date: false
    has_time: true
    initial: "08:30"
    name: Off day alarm
  workday_bedtime:
    has_date: false
    has_time: true
    initial: "22:00"
    name: Workday bedtime
  off_day_bedtime:
    has_date: false
    has_time: true
    initial: "23:00"
    name: Off day bedtime

input_select:
  scene:
    icon: mdi:theme-light-dark
    name: Scene
    options:
      - Morning
      - Day
      - Afternoon
      - Early evening
      - Evening
      - Night
      - Away
      - Vacation

scene:
  - name: Home
    entities:
      input_select.presence: Home

  - name: Away
    entities:
      input_select.presence: Away
      input_select.scene: Away
      automation.notify_when_current_scene_and_time_of_day_are_out_of_sync: off
      automation.synchronise_scene_to_time_of_day: off
      automation.turn_off_night_scene: off
      climate.living_room:
        state: heat
        temperature: 16
      input_boolean.keep_kitchen_spots_on: off
      light.kitchen_mood_lighting: off
      light.kitchen_spots: off
      light.kitchen_worktop: off
      light.living_room_pendant: off
      light.living_room_spots: off
      light.toilet_spot: off
      remote.harmony_hub: off

  - name: Vacation
    entities:
      input_select.presence: Vacation
      input_select.scene: Vacation
      automation.notify_when_current_scene_and_time_of_day_are_out_of_sync: off
      automation.synchronise_scene_to_time_of_day: off
      automation.turn_off_night_scene: off
      climate.living_room:
        state: heat
        temperature: 16
      input_boolean.keep_kitchen_spots_on: off
      light.kitchen_mood_lighting: off
      light.kitchen_spots: off
      light.kitchen_worktop: off
      light.living_room_pendant: off
      light.living_room_spots: off
      light.toilet_spot: off
      remote.harmony_hub: off

  - name: Morning
    entities:
      input_select.presence: Home
      input_select.scene: Morning
      automation.notify_when_current_scene_and_time_of_day_are_out_of_sync: on
      automation.synchronise_scene_to_time_of_day: on
      automation.toggle_kitchen_spots_through_motion_sensor: off
      automation.turn_off_night_scene: off
      climate.living_room:
        state: heat
        temperature: 19
      light.kitchen_mood_lighting: off
      light.kitchen_spots: on
      light.kitchen_worktop: off
      light.living_room_pendant: on
      light.living_room_spots: off

  - name: Day
    entities:
      input_select.presence: Home
      input_select.scene: Day
      automation.notify_when_current_scene_and_time_of_day_are_out_of_sync: on
      automation.synchronise_scene_to_time_of_day: on
      automation.toggle_kitchen_spots_through_motion_sensor: on
      automation.turn_off_night_scene: off
      climate.living_room:
        state: heat
        temperature: 19
      light.kitchen_mood_lighting: off
      light.kitchen_worktop: off
      light.living_room_pendant: off
      light.living_room_spots: off

  - name: Afternoon
    entities:
      input_select.presence: Home
      input_select.scene: Afternoon
      automation.notify_when_current_scene_and_time_of_day_are_out_of_sync: on
      automation.synchronise_scene_to_time_of_day: on
      automation.toggle_kitchen_spots_through_motion_sensor: on
      automation.turn_off_night_scene: off
      climate.living_room:
        state: heat
        temperature: 19
      light.kitchen_mood_lighting: on
      light.kitchen_worktop: off
      light.living_room_pendant: on
      light.living_room_spots: off

  - name: Early evening
    entities:
      input_select.presence: Home
      input_select.scene: Early evening
      automation.notify_when_current_scene_and_time_of_day_are_out_of_sync: on
      automation.synchronise_scene_to_time_of_day: on
      automation.toggle_kitchen_spots_through_motion_sensor: on
      automation.turn_off_night_scene: off
      climate.living_room:
        state: heat
        temperature: 19
      light.kitchen_mood_lighting: on
      light.kitchen_worktop: off
      light.living_room_pendant: on
      light.living_room_spots:
        brightness: 65
        color_temp: 475
        state: on

  - name: Evening
    entities:
      input_select.presence: Home
      input_select.scene: Evening
      automation.notify_when_current_scene_and_time_of_day_are_out_of_sync: on
      automation.synchronise_scene_to_time_of_day: on
      automation.toggle_kitchen_spots_through_motion_sensor: on
      automation.turn_off_night_scene: off
      climate.living_room:
        state: heat
        temperature: 19
      light.kitchen_mood_lighting: on
      light.kitchen_worktop: off
      light.living_room_pendant: on
      light.living_room_spots:
        brightness: 65
        color_temp: 475
        state: on

  - name: Night
    entities:
      input_select.presence: Home
      input_select.scene: Night
      automation.notify_when_current_scene_and_time_of_day_are_out_of_sync: off
      automation.synchronise_scene_to_time_of_day: off
      automation.toggle_kitchen_spots_through_motion_sensor: on
      automation.turn_off_night_scene: on
      climate.living_room:
        state: heat
        temperature: 16
      input_boolean.keep_kitchen_spots_on: off
      light.kitchen_mood_lighting: off
      light.kitchen_spots: off
      light.kitchen_worktop: off
      light.living_room_pendant: off
      light.living_room_spots: off
      remote.harmony_hub: off

script:
  scene_selection_reactivate:
    alias: Reactivate primary scene
    sequence:
      - service: scene.turn_on
        data_template:
          entity_id: scene.{{ states('sensor.current_scene') | lower | replace(' ', '_') }}
  turn_off_night_scene:
    alias: Turn off Night scene
    sequence:
      - service_template: "{{ 'scene' if is_state('sensor.time_of_day', 'Night') else 'script' }}.turn_on"
        data_template:
          entity_id: "{{ 'scene.morning' if is_state('sensor.time_of_day', 'Night') else 'script.scene_sync' }}"

sensor:
  - platform: template
    sensors:
      current_scene:
        friendly_name: Current scene
        icon_template: mdi:theme-light-dark
        value_template: "{{ states('input_select.scene') }}"
  - platform: time_date
    display_options:
      - date
      - time
