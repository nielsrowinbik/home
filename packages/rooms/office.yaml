automation:
  - alias: Set light.office_desk
    mode: queued
    trigger:
      # Trigger immediately when Home Assistant starts
      - platform: homeassistant
        event: start

      # Trigger immediately when automations are reloaded
      - platform: event
        event_type: automation_reloaded

      # Trigger immediately when current scene changes to a state we're interested in
      - platform: state
        entity_id: sensor.current_scene
        to:
          - Night

      # Trigger immediately when current scene changes from a state we're interested in
      - platform: state
        entity_id: sensor.current_scene
        from:
          - Night

      # Trigger immediately when motion detection changes
      - platform: state
        entity_id: binary_sensor.office_motion
        to:
          - "on"
          - "off"

      # Trigger immediately when motion detection changes
      - platform: state
        entity_id: binary_sensor.staircase_motion
        to:
          - "on"
          - "off"

      # Trigger immediately when work mode is toggled
      - platform: state
        entity_id: input_boolean.work_mode
        to:
          - "on"
          - "off"
    action:
      - service: light.turn_on
        data:
          entity_id: light.office_desk
          brightness: >-
            {% set isMotion = is_state('binary_sensor.office_motion', 'on') or is_state('binary_sensor.staircase_motion', 'on') %}
            {% set isNight = is_state('sensor.current_scene', 'Night') %}
            {% set isWork = is_state('input_boolean.work_mode', 'on') %}

            {% if isWork %}
              255
            {% elif isNight and isMotion %}
              1
            {% else %}
              0
            {% endif %}
          transition: 0.5

  - alias: Set light.office_spots
    mode: queued
    trigger:
      # Trigger immediately when Home Assistant starts
      - platform: homeassistant
        event: start

      # Trigger immediately when automations are reloaded
      - platform: event
        event_type: automation_reloaded

      # Trigger immediately when current scene changes to a state we're interested in
      - platform: state
        entity_id: sensor.current_scene
        to:
          - Night

      # Trigger immediately when current scene changes from a state we're interested in
      - platform: state
        entity_id: sensor.current_scene
        from:
          - Night

      # Trigger immediately when motion detection changes
      - platform: state
        entity_id: binary_sensor.office_motion
        to:
          - "on"
          - "off"

      # Trigger immediately when motion detection changes
      - platform: state
        entity_id: binary_sensor.staircase_motion
        to:
          - "on"
          - "off"

      # Trigger immediately when work mode is toggled
      - platform: state
        entity_id: input_boolean.work_mode
        to:
          - "on"
          - "off"
    action:
      - service: light.turn_on
        data:
          entity_id: light.office_spots
          brightness: >-
            {% set isMotion = is_state('binary_sensor.office_motion', 'on') or is_state('binary_sensor.staircase_motion', 'on') %}
            {% set isNight = is_state('sensor.current_scene', 'Night') %}
            {% set isWork = is_state('input_boolean.work_mode', 'on') %}

            {% if isWork or (not isNight and isMotion) %}
              255
            {% elif isNight and isMotion %}
              1
            {% else %}
              0
            {% endif %}
          transition: 0.5

  - alias: Set light.office_worktop
    mode: queued
    trigger:
      # Trigger immediately when Home Assistant starts
      - platform: homeassistant
        event: start

      # Trigger immediately when automations are reloaded
      - platform: event
        event_type: automation_reloaded

      # Trigger immediately when work mode is toggled
      - platform: state
        entity_id: input_boolean.work_mode
        to:
          - "on"
          - "off"
    action:
      - service: light.turn_on
        data:
          entity_id: light.office_worktop
          brightness: "{{ 255 if is_state('input_boolean.work_mode', 'on') else 0 }}"
          transition: 0.5

  - alias: Toggle Work mode depending on phone charging type
    description: Toggle working mode when phone begins or stops charging wirelessly during certain times of day
    trigger:
      # Trigger immediately when the phone begins charging wirelessly
      - platform: state
        entity_id: sensor.pixel_4_charger_type
        from: none
        to: wireless

      # Trigger immediately when the phone stops charging wirelessly
      - platform: state
        entity_id: sensor.pixel_4_charger_type
        from: wireless
        to: none
    condition:
      # Only trigger on workdays
      - condition: state
        entity_id: binary_sensor.today_is_a_workday
        state: "on"
    action:
      - choose:
          # IF charging begins during Morning or Day, turn on Work mode
          - conditions:
              - condition: template
                value_template: "{{ trigger.to_state.state == 'wireless' }}"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Morning
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Day
            sequence:
              - service: input_boolean.turn_on
                data:
                  entity_id: input_boolean.work_mode

          # IF charging stops during Afternoon, Early evening, or Evening, turn off Work mode
          - conditions:
              - condition: template
                value_template: "{{ trigger.to_state.state == 'none' }}"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Afternoon
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Early evening
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Evening
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.work_mode

binary_sensor:
  - platform: mqtt
    device_class: motion
    name: Office motion
    payload_off: false
    payload_on: true
    state_topic: zigbee2mqtt/office_motion_sensor
    value_template: "{{ value_json.occupancy }}"
  - platform: mqtt
    device_class: motion
    name: Staircase motion
    payload_off: false
    payload_on: true
    state_topic: zigbee2mqtt/staircase_motion_sensor
    value_template: "{{ value_json.occupancy }}"

climate:
  - platform: mqtt
    name: Office
    modes:
      - "off"
      - auto
    current_temperature_template: "{{ value_json.temperature }}"
    current_temperature_topic: zigbee2mqtt/office_temperature_pressure_and_humidity_sensor
    json_attributes_topic: zigbee2mqtt/office_temperature_pressure_and_humidity_sensor
    json_attributes_template: >-
      {% set attributes = {
        "current_humidity": value_json.humidity,
        "current_pressure": value_json.pressure
      } %}

      {{ attributes | to_json }}

group:
  office_lights:
    name: Office lights
    entities:
      - light.office_desk
      - light.office_spots
      - light.office_worktop

input_boolean:
  work_mode:
    icon: mdi:briefcase-outline
    name: Work mode

light:
  - platform: mqtt
    brightness: true
    command_topic: "zigbee2mqtt/office_desk_light/set"
    name: Office desk
    schema: json
    state_topic: "zigbee2mqtt/office_desk_light"
  - platform: mqtt
    brightness: true
    command_topic: "zigbee2mqtt/office_spots/set"
    name: Office spots
    schema: json
    state_topic: "zigbee2mqtt/office_spots"
  - platform: mqtt
    brightness: true
    command_topic: "zigbee2mqtt/office_worktop_light/set"
    name: Office worktop
    schema: json
    state_topic: "zigbee2mqtt/office_worktop_light"

sensor:
  - platform: mqtt
    name: Office humidity
    state_topic: zigbee2mqtt/office_temperature_pressure_and_humidity_sensor
    unit_of_measurement: "%"
    value_template: "{{ value_json.humidity }}"
  - platform: mqtt
    name: Office illuminance
    state_topic: zigbee2mqtt/office_motion_sensor
    unit_of_measurement: lm
    value_template: "{{ value_json.illuminance }}"
  - platform: mqtt
    name: Office temperature
    state_topic: zigbee2mqtt/office_temperature_pressure_and_humidity_sensor
    unit_of_measurement: "Â°C"
    value_template: "{{ value_json.temperature }}"
  - platform: mqtt
    name: Staircase illuminance
    state_topic: zigbee2mqtt/staircase_motion_sensor
    unit_of_measurement: lm
    value_template: "{{ value_json.illuminance }}"