automation:
  - alias: Set office lights state
    description: Turns on or off the correct office lights
    trigger:
      # Trigger immediately when Home Assistant starts
      - platform: homeassistant
        event: start

      # Trigger immediately when current scene changes
      - platform: state
        entity_id: sensor.current_scene
        to: "*"

      # Trigger immediately when work mode is toggled
      - platform: state
        entity_id: input_boolean.work_mode
        to:
          - "on"
          - "off"

      # Trigger immediately when motion detection changes
      - platform: state
        entity_id: binary_sensor.office_motion
        to:
          - "on"
          - "off"

      # Trigger immediately when motion detection changes
      - platform: state
        entity_id: binary_sensor.staircase_motion
        to:
          - "on"
          - "off"
    action:
      - service: script.set_office_lights_state

  - alias: Toggle Work mode depending on phone charging type
    description: Toggle working mode when phone begins or stops charging wirelessly during certain times of day
    trigger:
      # Trigger immediately when the phone begins charging wirelessly
      - platform: state
        entity_id: sensor.pixel_4_charger_type
        from: none
        to: wireless

      # Trigger immediately when the phone stops charging wirelessly
      - platform: state
        entity_id: sensor.pixel_4_charger_type
        from: wireless
        to: none
    condition:
      # Only trigger on workdays
      - condition: state
        entity_id: binary_sensor.today_is_a_workday
        state: "on"
    action:
      - choose:
          # IF charging begins during Morning or Day, turn on Work mode
          - conditions:
              - condition: template
                value_template: "{{ trigger.to_state.state == 'wireless' }}"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Morning
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Day
            sequence:
              - service: input_boolean.turn_on
                data:
                  entity_id: input_boolean.work_mode

          # IF charging stops during Afternoon, Early evening, or Evening, turn off Work mode
          - conditions:
              - condition: template
                value_template: "{{ trigger.to_state.state == 'none' }}"
              - condition: or
                conditions:
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Afternoon
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Early evening
                  - condition: state
                    entity_id: sensor.current_scene
                    state: Evening
            sequence:
              - service: input_boolean.turn_off
                data:
                  entity_id: input_boolean.work_mode

input_boolean:
  work_mode:
    icon: mdi:briefcase-outline
    name: Work mode

light:
  - platform: mqtt
    brightness: true
    command_topic: "zigbee2mqtt/office_spots/set"
    name: Office spots
    schema: json
    state_topic: "zigbee2mqtt/office_spots"

script:
  set_office_lights_state:
    alias: Set office lights state
    mode: restart
    sequence:
      - choose:
          # IF work mode is enabled
          - conditions:
              - condition: state
                entity_id: input_boolean.work_mode
                state: "on"
            sequence:
              - service: scene.apply
                data:
                  entities:
                    light.office_desk:
                      brightness: 255
                      state: on
                    light.office_spots:
                      brightness: 255
                      state: on
                    light.office_worktop:
                      brightness: 255
                      state: on
                  transition: 0.5

          # IF motion is detected
          - conditions:
              condition: or
              conditions:
                - condition: state
                  entity_id: binary_sensor.office_motion
                  state: "on"
                - condition: state
                  entity_id: binary_sensor.staircase_motion
                  state: "on"
            sequence:
              - choose:
                  # IF "Night" scene is active
                  - conditions:
                      - condition: state
                        entity_id: sensor.current_scene
                        state: Night
                    sequence:
                      - service: scene.apply
                        data:
                          entities:
                            light.office_desk:
                              brightness: 1
                              state: on
                          transition: 0.5
                # ELSE (any other scene is active)
                default:
                  - service: scene.apply
                    data:
                      entities:
                        light.office_desk: off
                        light.office_spots:
                          brightness: 255
                          state: on
                        light.office_worktop: off
                      transition: 0.5

        default:
          - service: scene.apply
            data:
              entities:
                light.office_desk: off
                light.office_spots: off
                light.office_worktop: off
              transition: 1
