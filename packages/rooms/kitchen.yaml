automation:
  - alias: Set light.kitchen_mood_lighting
    mode: queued
    trigger:
      # Trigger immediately when Home Assistant starts
      - platform: homeassistant
        event: start

      # Trigger immediately when automations are reloaded
      - platform: event
        event_type: automation_reloaded

      # Trigger immediately when current scene changes
      - platform: state
        entity_id: sensor.current_scene
        to: "*"
    action:
      - service: light.turn_on
        data:
          entity_id: light.kitchen_mood_lighting
          brightness: >-
            {% set isAway = is_state('sensor.current_scene', 'Away') %}
            {% set isDay = is_state('sensor.current_scene', 'Day') %}
            {% set isNight = is_state('sensor.current_scene', 'Night') %}

            {{ 0 if isAway or isDay or isNight else 255 }}

  - alias: Set light.kitchen_spots
    mode: queued
    trigger:
      # Trigger immediately when Home Assistant starts
      - platform: homeassistant
        event: start

      # Trigger immediately when automations are reloaded
      - platform: event
        event_type: automation_reloaded

      # Trigger immediately when current scene changes to a state we're interested in
      - platform: state
        entity_id: sensor.current_scene
        to:
          - Morning
          - Day
          - Night

      # Trigger immediately when current scene changes from a state we're interested in
      - platform: state
        entity_id: sensor.current_scene
        from:
          - Morning
          - Day
          - Night

      # Trigger immediately when motion detection changes
      - platform: state
        entity_id: binary_sensor.kitchen_motion
        to:
          - "on"
          - "off"

      # Trigger immediately when bright mode is toggled
      - platform: state
        entity_id: input_boolean.kitchen_bright_mode
        to:
          - "on"
          - "off"

      # Trigger immediately when cooking mode is toggled
      - platform: state
        entity_id: input_boolean.cooking_mode
        to:
          - "on"
          - "off"
    action:
      - service: light.turn_on
        data:
          entity_id: light.kitchen_spots
          brightness: >-
            {% set isBright = is_state('input_boolean.kitchen_bright_mode', 'on') %}
            {% set isCooking = is_state('input_boolean.cooking_mode', 'on') %}
            {% set isDark = is_state('binary_sensor.kitchen_sufficiently_lit', 'off') %}
            {% set isNight = is_state('sensor.current_scene', 'Night') %}
            {% set isMorning = is_state('sensor.current_scene', 'Morning') %}
            {% set isMotion = is_state('binary_sensor.kitchen_motion', 'on') %}

            {% if isMorning or isBright or isCooking or (isDark and isMotion) %}
              255
            {% elif isNight and isMotion %}
              1
            {% else %}
              0
            {% endif %}
          color_temp: >-
            {% set isBright = is_state('input_boolean.kitchen_bright_mode', 'on') %}
            {% set isCooking = is_state('input_boolean.cooking_mode', 'on') %}
            {% set isNight = is_state('sensor.current_scene', 'Night') %}

            {{ 475 if isNight else 350 }}
          transition: 0.5

  - alias: Set light.kitchen_worktop
    mode: queued
    trigger:
      # Trigger immediately when Home Assistant starts
      - platform: homeassistant
        event: start

      # Trigger immediately when automations are reloaded
      - platform: event
        event_type: automation_reloaded

      # Trigger immediately when cooking mode is toggled
      - platform: state
        entity_id: input_boolean.cooking_mode
        to:
          - "on"
          - "off"
    action:
      - service: light.turn_on
        data:
          entity_id: light.kitchen_worktop
          brightness: >-
            {% set isCooking = is_state('input_boolean.cooking_mode', 'on') %}

            {{ 255 if isCooking else 0 }}
          transition: 0.5

  - alias: Toggle cooking mode
    trigger:
      # Trigger immediately when the kitchen wall switch's right button is pressed
      - platform: mqtt
        topic: zigbee2mqtt/kitchen_switch/action
        payload: single_right
    action:
      - service: input_boolean.toggle
        entity_id: input_boolean.cooking_mode
      - service: input_boolean.turn_off
        entity_id: input_boolean.kitchen_bright_mode

  - alias: Toggle kitchen bright mode
    trigger:
      # Trigger immediately when the kitchen wall switch's left button is pressed
      - platform: mqtt
        topic: zigbee2mqtt/kitchen_switch/action
        payload: single_left
    action:
      - condition: state
        entity_id: input_boolean.cooking_mode
        state: "off"
      - service: input_boolean.toggle
        entity_id: input_boolean.kitchen_bright_mode

binary_sensor:
  - platform: template
    sensors:
      kitchen_sufficiently_lit:
        device_class: light
        friendly_name: Kitchen is sufficiently lit
        value_template: "{{ state_attr('binary_sensor.kitchen_motion', 'illuminance') | float > states('input_number.kitchen_illuminance_threshold') | float }}"

climate:
  - platform: mqtt
    name: Kitchen
    modes:
      - "off"
      - auto
    current_temperature_template: "{{ value_json.temperature }}"
    current_temperature_topic: zigbee2mqtt/kitchen_temperature_pressure_and_humidity_sensor
    json_attributes_topic: zigbee2mqtt/kitchen_temperature_pressure_and_humidity_sensor
    json_attributes_template: >-
      {% set attributes = {
        "current_humidity": value_json.humidity,
        "current_pressure": value_json.pressure
      } %}

      {{ attributes | to_json }}

input_boolean:
  cooking_mode:
    icon: mdi:chef-hat
    name: Cooking mode
  kitchen_bright_mode:
    icon: mdi:brightness-7
    name: Bright mode (Kitchen)

input_number:
  kitchen_illuminance_threshold:
    icon: mdi:tune
    max: 100
    min: 0
    mode: box
    name: Kitchen illuminance threshold
    step: 1

light:
  - platform: mqtt
    brightness: true
    color_temp: true
    command_topic: "zigbee2mqtt/kitchen_spots/set"
    name: Kitchen spots
    schema: json
    state_topic: "zigbee2mqtt/kitchen_spots"
  - platform: switch
    name: Kitchen mood lighting
    entity_id: switch.power_outlet_1
