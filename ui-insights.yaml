button_card_templates:
  round_button:
    style: |
      ha-card {
        background: none;
        box-shadow: none;
      }
    styles:
      card:
        - width: 96px
        - height: 96px
        - font-size: 0.9rem
        - font-weight: semibold
        - box-shadow: none
        - justify-content: center
        - margin: 0 -4px
      grid:
        - display: flex
        - flex-direction: column
      icon:
        - color: var(--primary-text-color)
        - background-color: var(--surface-24dp)
        - border-radius: 100%
        - width: 24px
        - height: 24px
        - padding: 17px
      name:
        - color: var(--secondary-text-color)
title: " "
views:
  - cards:
      - cards:
          - content: >-
              <div class="flex">
                <div>
                  <h2>{{ now().strftime('%H:%M') }}</h2>
                </div>
                <div>
                  <img src="/local/icons/{{ states('weather.home') }}.png" height="30" width="30" />
                  <h2>{{ state_attr('weather.home', 'temperature')|round }}Â°</h2>
                </div>
              </div>
            style:
              .: |
                ha-card {
                  background: transparent;
                  box-shadow: none;
                  transition: none;
                }

                ha-markdown {
                  padding: 12px 16px !important;
                  font-family: 'Product Sans', Roboto;
                }
              ha-markdown:
                $: |
                  ha-markdown-element div {
                    align-items: center;
                    display: flex;
                    flex-direction: row;
                    justify-content: space-between;
                  }

                  h2 {
                    font-weight: 400 !important;
                  }

                  img {
                    margin-right: 6px;
                  }
            type: markdown
          - content: >-
              {% set tod = states('sensor.time_of_day').split(' ')|last|lower %}
              {% set greeting = "Good " + tod + "!" if tod != 'day' else "" %}

              {% set messages = []|reject("eq", "")|list %}
              {% set noMessagesMessage = "Looks like there's nothing new right now. Enjoy your " + tod + "!" %}

              {% if messages|length == 0 %}
                # {{ noMessagesMessage }}
              {% else %}
                # {{ ([greeting] + messages)|join(' ') }}
              {% endif %}
            style:
              .: |
                ha-card {
                  background: transparent;
                  box-shadow: none;
                  transition: none;
                }

                ha-markdown {
                  padding: 12px 16px 28px 16px !important;
                }
              ha-markdown:
                $: |
                  h1 {
                    font-family: 'Product Sans', Roboto;
                    font-weight: 500;
                    line-height: 2.5rem;
                  }
            type: markdown
          - card:
              entities:
                - entity: binary_sensor.suggest_update
                  icon: mdi:update
                  name: "{{ state_attr('binary_sensor.suggest_update', 'title') }}"
                  secondary: "{{ state_attr('binary_sensor.suggest_update', 'message') }}"
                  state: ""
                  tap_action:
                    action: url
                    url_path: https://www.home-assistant.io/latest-release-notes/
                  type: custom:template-entity-row
              style: |
                ha-card {
                  margin-left: 12px;
                  margin-right: 12px;
                }
              type: entities
            conditions:
              - entity: binary_sensor.suggest_update
                state: "on"
            type: conditional
          - card:
              entities:
                - entity: input_boolean.bedtime_mode
                  name: "{{ state_attr('binary_sensor.suggest_bedtime', 'title') }}"
                  secondary: "{{ state_attr('binary_sensor.suggest_bedtime', 'message') }}"
                  state: ""
                  tap_action:
                    action: toggle
                  type: custom:template-entity-row
              style: |
                ha-card {
                  margin-left: 12px;
                  margin-right: 12px;
                }
              type: entities
            conditions:
              - entity: binary_sensor.suggest_bedtime
                state: "on"
            type: conditional
          - card:
              entities:
                - entity: input_boolean.cooking_mode
                  name: Ready for some food?
                  secondary: Tap to get started
                  state: ""
                  tap_action:
                    action: toggle
                  type: custom:template-entity-row
              style: |
                ha-card {
                  margin-left: 12px;
                  margin-right: 12px;
                }
              type: entities
            conditions:
              - entity: binary_sensor.should_suggest_cooking_mode
                state: "on"
            type: conditional
          - card:
              entities:
                - entity: input_boolean.movie_mode
                  name: "{{ state_attr('binary_sensor.suggest_movie', 'title') }}"
                  secondary: "{{ state_attr('binary_sensor.suggest_movie', 'message') }}"
                  state: ""
                  tap_action:
                    action: toggle
                  type: custom:template-entity-row
              style: |
                ha-card {
                  margin-left: 12px;
                  margin-right: 12px;
                }
              type: entities
            conditions:
              - entity: binary_sensor.suggest_movie
                state: "on"
            type: conditional
          - cards:
              - type: custom:button-card
                template: round_button
                icon: '[[[ if (entity.state === "on") return "mdi:briefcase-outline"; else return "mdi:briefcase-off-outline" ]]]'
                entity: input_boolean.work_mode
              - type: custom:button-card
                template: round_button
                icon: '[[[ if (entity.state === "on") return "mdi:food"; else return "mdi:food-off" ]]]'
                entity: input_boolean.cooking_mode
              - type: custom:button-card # TODO: Only show when bedtime mode is announced or on
                template: round_button
                icon: '[[[ if (entity.state === "on") return "mdi:sleep"; else return "mdi:sleep-off" ]]]'
                entity: input_boolean.bedtime_mode
              - type: custom:button-card # TODO: Only show when bedtime mode is NOT announced or on
                template: round_button
                icon: '[[[ if (entity.state === "heat") return "mdi:thermometer"; else return "mdi:thermometer-off" ]]]'
                entity: climate.living_room
            type: horizontal-stack
        type: vertical-stack
    path: index
    title: Snapshot
